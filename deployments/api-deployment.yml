apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-api-demo
spec:
  replicas: 3
  selector:
    matchLabels:
      type: api
      service: deploy-api-demo
  minReadySeconds: 1 # Minimum time (1s) before Kubernetes considers Pods healthy. Prevents premature traffic routing to new Pods. Default: 0
  progressDeadlineSeconds: 60 # Maximum time (60s) for deployment to make progress before marking as failed. Helps detect stuck deployments. Default: 600
  revisionHistoryLimit: 5 # Number of old ReplicaSets to keep for rollback purposes. Balances storage usage vs. rollback capability. Default: 10
  strategy:
    type: RollingUpdate # Deployment strategy: RollingUpdate (gradual) or Recreate (all-at-once). RollingUpdate ensures zero downtime.
    rollingUpdate:
      maxSurge: 1 # Maximum extra Pods allowed during updates. With 3 replicas, allows up to 4 Pods temporarily for smooth transitions. Default: 25%
      maxUnavailable: 1 # Maximum Pods that can be unavailable during updates. Ensures at least 2/3 Pods remain running for availability. Default: 25%
  template:
    metadata:
      labels:
        type: api
        service: deploy-api-demo
        language: go
    spec:
      containers:
        - name: api
          image: vfarcic/go-demo-2
          env:
            - name: DB
              value:  deployment-db-demo
          readinessProbe:
            httpGet:
              path: /demo/hello
              port: 8080
            periodSeconds: 1
          livenessProbe:
            httpGet:
              path: /demo/hello
              port: 8080